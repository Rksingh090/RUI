/* background and color  */
.mainBG {
    background-color: var(--background);
}

.secondaryBG {
    background-color: var(--secondaryBg);
    color: var(--secondaryColor);
}

.mainIcon {
    fill: var(--secondaryColor);
}

.mainText {
    color: var(--secondaryColor);
}

.primaryText {
    color: var(--primaryColor);
}

/* rounded  */
.roundSM {
    border-radius: 4px;
}

.roundMD {
    border-radius: 8px;
}

/* padding  */
.padSM {
    padding: var(--padSM);
}

.padXSM {
    padding: var(--padXSM);
}

.padYSM {
    padding: var(--padYSM);
}

/* input  */
.rpInput {
    padding: 7px 10px;
    background-color: var(--secondaryBg);
    color: var(--secondaryColor);

    border: none;
    outline: none;
    width: inherit;
}

.rpInput::placeholder {
    color: var(--fadeText);
}

.rpInput.noXPad {
    padding-left: 0;
    padding-right: 0;
}

.rpInput.noYPad {
    padding-top: 0;
    padding-bottom: 0;
}

/* nostyle input  */
input.noStyle {
    border: none;
    outline: none;
    height: 100%;
    background: transparent;
    padding: 0 5px;
}


/* flex  */
.flexRow {
    display: flex;
    flex-direction: row;
    align-items: center;
}


.flexRow.gapSM {
    gap: 5px;
}

.flexRow.gapMD {
    gap: 10px;
}

.flexRow.gapLG {
    gap: 15px;
}

.flexCol {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}


.flexCol.gapSM {
    gap: 5px;
}

.flexCol.gapMD {
    gap: 10px;
}

.flexCol.gapLG {
    gap: 15px;
}


/* icon btns  */

.iconWrap {
    height: 35px;
    aspect-ratio: 1;
    background-color: rgba(255, 255, 255, 0);
    transition: all .1s ease-in-out;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    border-radius: 5000px;
    cursor: pointer;
}

.iconWrap.effect:hover {
    background-color: var(--transparentBG);
}

.iconWrap.effect:active {
    transform: scale(.87);
}


/* fonts  */
.fxs {
    font-size: 10px;
}

.fsm {
    font-size: 12px;
}

.fmd {
    font-size: 14px;
}

.flg {
    font-size: 16px;
}

.fxl {
    font-size: 18px;
}

.fxxl {
    font-size: 20px;
}


/* font weight  */

.fw300 {
    font-weight: 300;
}

.fw400 {
    font-weight: 400;
}

.fw500 {
    font-weight: 500;
}

.f600 {
    font-weight: 600;
}


/* position utils  */
.corner {
    position: absolute;
}

.corner.gapSM {
    padding: 5px;
}

.corner.gapMD {
    padding: 10px;
}

.corner.topLeft {
    top: 0;
    left: 0;
}

.corner.topRight {
    top: 0;
    right: 0;
}


/* with padding  */

.withPadding {
    padding: 15px;
}

.withShadow {
    box-shadow: var(--shadowSM);
}

.hoverToSecondaryBG:hover {
    background-color: var(--secondaryBg);
}


.withPointer {
    cursor: pointer;
}



/* tab menu with bar  */
.TabMenu {
    display: flex;
    flex-direction: row;
    align-items: center;
    background-color: var(--background);
}

.TabMenu.wrap {
    flex-wrap: wrap;
}
.TabMenu.scrollX {
    overflow-y: hidden;
    overflow-x: auto;
}
.TabMenu.scrollX::-webkit-scrollbar {
    height: 4px;
}

.TabMenu .tab {
    font-size: 12px;
    padding: 7px 10px;
    cursor: pointer;
    white-space: nowrap;
}

.TabMenu.round {
    overflow: hidden;
    border-radius: 5px;
}
.tab.active {
    color: white;
    background-color: var(--primaryColor);
}


/* links style  */
.Rlink {
    text-decoration: none;
}



/* badge colors */
.successBG {
    background-color: var(--success);
}
.successText {
    color: var(--success);
}
.successBorderAll {
    border: 1px solid var(--success);
}
.successBorderTop {
    border-top: 1px solid var(--success);
}

.errorBG {
    background-color: var(--error);
}
.errorText {
    color: var(--error);
}
.errorBorderAll {
    border: 1px solid var(--error);
}
.errorBorderTop {
    border-top: 1px solid var(--error);
}

.infoBG {
    background-color: var(--info);
}
.infoText {
    color: var(--info);
}
.infoBorderAll {
    border: 1px solid var(--info);
}
.infoBorderTop {
    border-top: 1px solid var(--info);
}


.warningBG {
    background-color: var(--warning);
}
.warningText {
    color: var(--warning);
}
.warningBorderAll {
    border: 1px solid var(--warning);
}
.warningBorderTop {
    border-top: 1px solid var(--warning);
}